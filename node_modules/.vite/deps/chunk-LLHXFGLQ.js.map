{
  "version": 3,
  "sources": ["../../vuetify/src/composables/layout.ts"],
  "sourcesContent": ["// Composables\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  onActivated,\n  onBeforeUnmount,\n  onDeactivated,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n} from 'vue'\nimport { convertToUnit, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, CSSProperties, InjectionKey, Prop, Ref } from 'vue'\n\ntype Position = 'top' | 'left' | 'right' | 'bottom'\n\ntype LayoutItem = {\n  id: string\n  top: number\n  bottom: number\n  left: number\n  right: number\n  size: number\n}\n\ninterface LayoutProvide {\n  register: (\n    vm: ComponentInternalInstance,\n    options: {\n      id: string\n      order: Ref<number>\n      position: Ref<Position>\n      layoutSize: Ref<number | string>\n      elementSize: Ref<number | string | undefined>\n      active: Ref<boolean>\n      disableTransitions?: Ref<boolean>\n      absolute: Ref<boolean | undefined>\n    }\n  ) => {\n    layoutItemStyles: Ref<CSSProperties>\n    layoutItemScrimStyles: Ref<CSSProperties>\n    zIndex: Ref<number>\n  }\n  unregister: (id: string) => void\n  mainStyles: Ref<CSSProperties>\n  getLayoutItem: (id: string) => LayoutItem | undefined\n  items: Ref<LayoutItem[]>\n  layoutRect: Ref<DOMRectReadOnly | undefined>\n  rootZIndex: Ref<number>\n}\n\nexport const VuetifyLayoutKey: InjectionKey<LayoutProvide> = Symbol.for('vuetify:layout')\nexport const VuetifyLayoutItemKey: InjectionKey<{ id: string }> = Symbol.for('vuetify:layout-item')\n\nconst ROOT_ZINDEX = 1000\n\nexport const makeLayoutProps = propsFactory({\n  overlaps: {\n    type: Array,\n    default: () => ([]),\n  } as Prop<string[]>,\n  fullHeight: Boolean,\n}, 'layout')\n\n// Composables\nexport const makeLayoutItemProps = propsFactory({\n  name: {\n    type: String,\n  },\n  order: {\n    type: [Number, String],\n    default: 0,\n  },\n  absolute: Boolean,\n}, 'layout-item')\n\nexport function useLayout () {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('Could not find injected Vuetify layout')\n\n  return layout\n}\n\nexport function useLayoutItem (options: {\n  id: string | undefined\n  order: Ref<number>\n  position: Ref<Position>\n  layoutSize: Ref<number | string>\n  elementSize: Ref<number | string | undefined>\n  active: Ref<boolean>\n  disableTransitions?: Ref<boolean>\n  absolute: Ref<boolean | undefined>\n}) {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('Could not find injected Vuetify layout')\n\n  const id = options.id ?? `layout-item-${getUid()}`\n\n  const vm = getCurrentInstance('useLayoutItem')\n\n  provide(VuetifyLayoutItemKey, { id })\n\n  const isKeptAlive = ref(false)\n  onDeactivated(() => isKeptAlive.value = true)\n  onActivated(() => isKeptAlive.value = false)\n\n  const {\n    layoutItemStyles,\n    layoutItemScrimStyles,\n  } = layout.register(vm, {\n    ...options,\n    active: computed(() => isKeptAlive.value ? false : options.active.value),\n    id,\n  })\n\n  onBeforeUnmount(() => layout.unregister(id))\n\n  return { layoutItemStyles, layoutRect: layout.layoutRect, layoutItemScrimStyles }\n}\n\nconst generateLayers = (\n  layout: string[],\n  positions: Map<string, Ref<Position>>,\n  layoutSizes: Map<string, Ref<number | string>>,\n  activeItems: Map<string, Ref<boolean>>,\n) => {\n  let previousLayer = { top: 0, left: 0, right: 0, bottom: 0 }\n  const layers = [{ id: '', layer: { ...previousLayer } }]\n  for (const id of layout) {\n    const position = positions.get(id)\n    const amount = layoutSizes.get(id)\n    const active = activeItems.get(id)\n    if (!position || !amount || !active) continue\n\n    const layer = {\n      ...previousLayer,\n      [position.value]: parseInt(previousLayer[position.value], 10) + (active.value ? parseInt(amount.value, 10) : 0),\n    }\n\n    layers.push({\n      id,\n      layer,\n    })\n\n    previousLayer = layer\n  }\n\n  return layers\n}\n\nexport function createLayout (props: { overlaps?: string[], fullHeight?: boolean }) {\n  const parentLayout = inject(VuetifyLayoutKey, null)\n  const rootZIndex = computed(() => parentLayout ? parentLayout.rootZIndex.value - 100 : ROOT_ZINDEX)\n  const registered = ref<string[]>([])\n  const positions = reactive(new Map<string, Ref<Position>>())\n  const layoutSizes = reactive(new Map<string, Ref<number | string>>())\n  const priorities = reactive(new Map<string, Ref<number>>())\n  const activeItems = reactive(new Map<string, Ref<boolean>>())\n  const disabledTransitions = reactive(new Map<string, Ref<boolean>>())\n  const { resizeRef, contentRect: layoutRect } = useResizeObserver()\n\n  const computedOverlaps = computed(() => {\n    const map = new Map<string, { position: Position, amount: number }>()\n    const overlaps = props.overlaps ?? []\n    for (const overlap of overlaps.filter(item => item.includes(':'))) {\n      const [top, bottom] = overlap.split(':')\n      if (!registered.value.includes(top) || !registered.value.includes(bottom)) continue\n\n      const topPosition = positions.get(top)\n      const bottomPosition = positions.get(bottom)\n      const topAmount = layoutSizes.get(top)\n      const bottomAmount = layoutSizes.get(bottom)\n\n      if (!topPosition || !bottomPosition || !topAmount || !bottomAmount) continue\n\n      map.set(bottom, { position: topPosition.value, amount: parseInt(topAmount.value, 10) })\n      map.set(top, { position: bottomPosition.value, amount: -parseInt(bottomAmount.value, 10) })\n    }\n\n    return map\n  })\n\n  const layers = computed(() => {\n    const uniquePriorities = [...new Set([...priorities.values()].map(p => p.value))].sort((a, b) => a - b)\n    const layout = []\n    for (const p of uniquePriorities) {\n      const items = registered.value.filter(id => priorities.get(id)?.value === p)\n      layout.push(...items)\n    }\n    return generateLayers(layout, positions, layoutSizes, activeItems)\n  })\n\n  const transitionsEnabled = computed(() => {\n    return !Array.from(disabledTransitions.values()).some(ref => ref.value)\n  })\n\n  const mainStyles = computed<CSSProperties>(() => {\n    const layer = layers.value[layers.value.length - 1].layer\n\n    return {\n      '--v-layout-left': convertToUnit(layer.left),\n      '--v-layout-right': convertToUnit(layer.right),\n      '--v-layout-top': convertToUnit(layer.top),\n      '--v-layout-bottom': convertToUnit(layer.bottom),\n      ...(transitionsEnabled.value ? undefined : { transition: 'none' }),\n    }\n  })\n\n  const items = computed(() => {\n    return layers.value.slice(1).map(({ id }, index) => {\n      const { layer } = layers.value[index]\n      const size = layoutSizes.get(id)\n\n      return {\n        id,\n        ...layer,\n        size: Number(size!.value),\n      }\n    })\n  })\n\n  const getLayoutItem = (id: string) => {\n    return items.value.find(item => item.id === id)\n  }\n\n  const rootVm = getCurrentInstance('createLayout')\n\n  const isMounted = ref(false)\n  onMounted(() => {\n    isMounted.value = true\n  })\n\n  provide(VuetifyLayoutKey, {\n    register: (\n      vm: ComponentInternalInstance,\n      {\n        id,\n        order,\n        position,\n        layoutSize,\n        elementSize,\n        active,\n        disableTransitions,\n        absolute,\n      }\n    ) => {\n      priorities.set(id, order)\n      positions.set(id, position)\n      layoutSizes.set(id, layoutSize)\n      activeItems.set(id, active)\n      disableTransitions && disabledTransitions.set(id, disableTransitions)\n\n      const instances = findChildrenWithProvide(VuetifyLayoutItemKey, rootVm?.vnode)\n      const instanceIndex = instances.indexOf(vm)\n\n      if (instanceIndex > -1) registered.value.splice(instanceIndex, 0, id)\n      else registered.value.push(id)\n\n      const index = computed(() => items.value.findIndex(i => i.id === id))\n      const zIndex = computed(() => rootZIndex.value + (layers.value.length * 2) - (index.value * 2))\n\n      const layoutItemStyles = computed<CSSProperties>(() => {\n        const isHorizontal = position.value === 'left' || position.value === 'right'\n        const isOppositeHorizontal = position.value === 'right'\n        const isOppositeVertical = position.value === 'bottom'\n\n        const styles = {\n          [position.value]: 0,\n          zIndex: zIndex.value,\n          transform: `translate${isHorizontal ? 'X' : 'Y'}(${(active.value ? 0 : -110) * (isOppositeHorizontal || isOppositeVertical ? -1 : 1)}%)`,\n          position: absolute.value || rootZIndex.value !== ROOT_ZINDEX ? 'absolute' : 'fixed',\n          ...(transitionsEnabled.value ? undefined : { transition: 'none' }),\n        } as const\n\n        if (!isMounted.value) return styles\n\n        if (index.value < 0) throw new Error(`Layout item \"${id}\" is missing`)\n\n        const item = items.value[index.value]\n\n        if (!item) throw new Error(`Could not find layout item \"${id}`)\n\n        const overlap = computedOverlaps.value.get(id)\n        if (overlap) {\n          item[overlap.position] += overlap.amount\n        }\n\n        return {\n          ...styles,\n          height: isHorizontal ? `calc(100% - ${item.top}px - ${item.bottom}px)` : elementSize.value ? `${elementSize.value}px` : undefined,\n          left: isOppositeHorizontal ? undefined : `${item.left}px`,\n          right: isOppositeHorizontal ? `${item.right}px` : undefined,\n          top: position.value !== 'bottom' ? `${item.top}px` : undefined,\n          bottom: position.value !== 'top' ? `${item.bottom}px` : undefined,\n          width: !isHorizontal ? `calc(100% - ${item.left}px - ${item.right}px)` : elementSize.value ? `${elementSize.value}px` : undefined,\n        }\n      })\n\n      const layoutItemScrimStyles = computed<CSSProperties>(() => ({\n        zIndex: zIndex.value - 1,\n      }))\n\n      return { layoutItemStyles, layoutItemScrimStyles, zIndex }\n    },\n    unregister: (id: string) => {\n      priorities.delete(id)\n      positions.delete(id)\n      layoutSizes.delete(id)\n      activeItems.delete(id)\n      disabledTransitions.delete(id)\n      registered.value = registered.value.filter(v => v !== id)\n    },\n    mainStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    rootZIndex,\n  })\n\n  const layoutClasses = computed(() => [\n    'v-layout',\n    { 'v-layout--full-height': props.fullHeight },\n  ])\n\n  const layoutStyles = computed(() => ({\n    zIndex: rootZIndex.value,\n    position: parentLayout ? 'relative' as const : undefined,\n    overflow: parentLayout ? 'hidden' : undefined,\n  }))\n\n  return {\n    layoutClasses,\n    layoutStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    layoutRef: resizeRef,\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAyDO,IAAMA,mBAAgDC,OAAOC,IAAI,gBAAX;AACtD,IAAMC,uBAAqDF,OAAOC,IAAI,qBAAX;AAElE,IAAME,cAAc;AAEb,IAAMC,kBAAkBC,aAAa;EAC1CC,UAAU;IACRC,MAAMC;IACNC,SAAS,MAAO,CAAA;EAFR;EAIVC,YAAYC;AAL8B,GAMzC,QANwC;AASpC,IAAMC,sBAAsBP,aAAa;EAC9CQ,MAAM;IACJN,MAAMO;EADF;EAGNC,OAAO;IACLR,MAAM,CAACS,QAAQF,MAAT;IACNL,SAAS;EAFJ;EAIPQ,UAAUN;AARoC,GAS7C,aAT4C;AAWxC,SAASO,YAAa;AAC3B,QAAMC,SAASC,OAAOrB,gBAAD;AAErB,MAAI,CAACoB;AAAQ,UAAM,IAAIE,MAAM,wCAAV;AAEnB,SAAOF;AACR;AAwCD,IAAMG,iBAAiB,CACrBC,QACAC,WACAC,aACAC,gBACG;AACH,MAAIC,gBAAgB;IAAEC,KAAK;IAAGC,MAAM;IAAGC,OAAO;IAAGC,QAAQ;EAArC;AACpB,QAAMC,SAAS,CAAC;IAAEC,IAAI;IAAIC,OAAO;MAAE,GAAGP;IAAL;EAAjB,CAAD;AACf,aAAWM,MAAMV,QAAQ;AACvB,UAAMY,WAAWX,UAAUY,IAAIH,EAAd;AACjB,UAAMI,SAASZ,YAAYW,IAAIH,EAAhB;AACf,UAAMK,SAASZ,YAAYU,IAAIH,EAAhB;AACf,QAAI,CAACE,YAAY,CAACE,UAAU,CAACC;AAAQ;AAErC,UAAMJ,QAAQ;MACZ,GAAGP;MACH,CAACQ,SAASI,QAAQC,SAASb,cAAcQ,SAASI,QAAQ,EAAhC,KAAuCD,OAAOC,QAAQC,SAASH,OAAOE,OAAO,EAAf,IAAqB;IAFjG;AAKdP,WAAOS,KAAK;MACVR;MACAC;IAFU,CAAZ;AAKAP,oBAAgBO;EACjB;AAED,SAAOF;AACR;AAEM,SAASU,aAAcC,OAAsD;AAClF,QAAMC,eAAeC,OAAOC,kBAAkB,IAAnB;AAC3B,QAAMC,aAAaC,SAAS,MAAMJ,eAAeA,aAAaG,WAAWR,QAAQ,MAAMU,WAA5D;AAC3B,QAAMC,aAAaC,IAAc,CAAA,CAAX;AACtB,QAAM3B,YAAY4B,SAAS,oBAAIC,IAAJ,CAAD;AAC1B,QAAM5B,cAAc2B,SAAS,oBAAIC,IAAJ,CAAD;AAC5B,QAAMC,aAAaF,SAAS,oBAAIC,IAAJ,CAAD;AAC3B,QAAM3B,cAAc0B,SAAS,oBAAIC,IAAJ,CAAD;AAC5B,QAAME,sBAAsBH,SAAS,oBAAIC,IAAJ,CAAD;AACpC,QAAM;IAAEG;IAAWC,aAAaC;EAA1B,IAAyCC,kBAAiB;AAEhE,QAAMC,mBAAmBZ,SAAS,MAAM;AAAA,QAAA;AACtC,UAAMa,MAAM,oBAAIR,IAAJ;AACZ,UAAMS,YAAQ,kBAAGnB,MAAMmB,aAAT,OAAA,kBAAqB,CAAA;AACnC,eAAWC,WAAWD,SAASE,OAAOC,UAAQA,KAAKC,SAAS,GAAd,CAAxB,GAA6C;AACjE,YAAM,CAACtC,KAAKG,MAAN,IAAgBgC,QAAQI,MAAM,GAAd;AACtB,UAAI,CAACjB,WAAWX,MAAM2B,SAAStC,GAA1B,KAAkC,CAACsB,WAAWX,MAAM2B,SAASnC,MAA1B;AAAmC;AAE3E,YAAMqC,cAAc5C,UAAUY,IAAIR,GAAd;AACpB,YAAMyC,iBAAiB7C,UAAUY,IAAIL,MAAd;AACvB,YAAMuC,YAAY7C,YAAYW,IAAIR,GAAhB;AAClB,YAAM2C,eAAe9C,YAAYW,IAAIL,MAAhB;AAErB,UAAI,CAACqC,eAAe,CAACC,kBAAkB,CAACC,aAAa,CAACC;AAAc;AAEpEV,UAAIW,IAAIzC,QAAQ;QAAEI,UAAUiC,YAAY7B;QAAOF,QAAQG,SAAS8B,UAAU/B,OAAO,EAAlB;MAA/C,CAAhB;AACAsB,UAAIW,IAAI5C,KAAK;QAAEO,UAAUkC,eAAe9B;QAAOF,QAAQ,CAACG,SAAS+B,aAAahC,OAAO,EAArB;MAAnD,CAAb;IACD;AAED,WAAOsB;EACR,CAnBgC;AAqBjC,QAAM7B,SAASgB,SAAS,MAAM;AAC5B,UAAMyB,mBAAmB,CAAC,GAAG,IAAIC,IAAI,CAAC,GAAGpB,WAAWqB,OAAX,CAAJ,EAAyBd,IAAIe,OAAKA,EAAErC,KAApC,CAAR,CAAJ,EAAyDsC,KAAK,CAACC,GAAGC,MAAMD,IAAIC,CAA5E;AACzB,UAAMxD,SAAS,CAAA;AACf,eAAWqD,KAAKH,kBAAkB;AAChC,YAAMO,SAAQ9B,WAAWX,MAAMyB,OAAO/B,QAAE;AAAA,YAAA;AAAA,iBAAI,kBAAAqB,WAAWlB,IAAIH,EAAf,MAAA,OAAA,SAAA,gBAAoBM,WAAUqC;MAAlC,CAA1B;AACdrD,aAAOkB,KAAK,GAAGuC,MAAf;IACD;AACD,WAAO1D,eAAeC,QAAQC,WAAWC,aAAaC,WAAjC;EACtB,CARsB;AAUvB,QAAMuD,qBAAqBjC,SAAS,MAAM;AACxC,WAAO,CAACkC,MAAMC,KAAK5B,oBAAoBoB,OAApB,CAAX,EAAyCS,KAAKjC,CAAAA,SAAOA,KAAIZ,KAAzD;EACT,CAFkC;AAInC,QAAM8C,aAAarC,SAAwB,MAAM;AAC/C,UAAMd,QAAQF,OAAOO,MAAMP,OAAOO,MAAM+C,SAAS,GAAGpD;AAEpD,WAAO;MACL,mBAAmBqD,cAAcrD,MAAML,IAAP;MAChC,oBAAoB0D,cAAcrD,MAAMJ,KAAP;MACjC,kBAAkByD,cAAcrD,MAAMN,GAAP;MAC/B,qBAAqB2D,cAAcrD,MAAMH,MAAP;MAClC,GAAIkD,mBAAmB1C,QAAQiD,SAAY;QAAEC,YAAY;MAAd;IALtC;EAOR,CAV0B;AAY3B,QAAMT,QAAQhC,SAAS,MAAM;AAC3B,WAAOhB,OAAOO,MAAMmD,MAAM,CAAnB,EAAsB7B,IAAI,CAAA,MAAS8B,UAAU;AAAA,UAAlB;QAAE1D;MAAF,IAAkB;AAClD,YAAM;QAAEC;MAAF,IAAYF,OAAOO,MAAMoD;AAC/B,YAAMC,OAAOnE,YAAYW,IAAIH,EAAhB;AAEb,aAAO;QACLA;QACA,GAAGC;QACH0D,MAAMC,OAAOD,KAAMrD,KAAP;MAHP;IAKR,CATM;EAUR,CAXqB;AAatB,QAAMuD,gBAAiB7D,QAAe;AACpC,WAAO+C,MAAMzC,MAAMwD,KAAK9B,UAAQA,KAAKhC,OAAOA,EAArC;EACR;AAED,QAAM+D,SAASC,mBAAmB,cAAD;AAEjC,QAAMC,YAAY/C,IAAI,KAAD;AACrBgD,YAAU,MAAM;AACdD,cAAU3D,QAAQ;EACnB,CAFQ;AAIT6D,UAAQtD,kBAAkB;IACxBuD,UAAU,CACRC,IADQ,UAYL;AAAA,UAVH;QACErE;QACAsE;QACApE;QACAqE;QACAC;QACAnE;QACAoE;QACAC;MARF,IAUG;AACHrD,iBAAWkB,IAAIvC,IAAIsE,KAAnB;AACA/E,gBAAUgD,IAAIvC,IAAIE,QAAlB;AACAV,kBAAY+C,IAAIvC,IAAIuE,UAApB;AACA9E,kBAAY8C,IAAIvC,IAAIK,MAApB;AACAoE,4BAAsBnD,oBAAoBiB,IAAIvC,IAAIyE,kBAA5B;AAEtB,YAAME,YAAYC,wBAAwBC,sBAAsBd,UAAvB,OAAA,SAAuBA,OAAQe,KAA/B;AACzC,YAAMC,gBAAgBJ,UAAUK,QAAQX,EAAlB;AAEtB,UAAIU,gBAAgB;AAAI9D,mBAAWX,MAAM2E,OAAOF,eAAe,GAAG/E,EAA1C;;AACnBiB,mBAAWX,MAAME,KAAKR,EAAtB;AAEL,YAAM0D,QAAQ3C,SAAS,MAAMgC,MAAMzC,MAAM4E,UAAUC,OAAKA,EAAEnF,OAAOA,EAApC,CAAP;AACtB,YAAMoF,SAASrE,SAAS,MAAMD,WAAWR,QAASP,OAAOO,MAAM+C,SAAS,IAAMK,MAAMpD,QAAQ,CAArE;AAEvB,YAAM+E,mBAAmBtE,SAAwB,MAAM;AACrD,cAAMuE,eAAepF,SAASI,UAAU,UAAUJ,SAASI,UAAU;AACrE,cAAMiF,uBAAuBrF,SAASI,UAAU;AAChD,cAAMkF,qBAAqBtF,SAASI,UAAU;AAE9C,cAAMmF,SAAS;UACb,CAACvF,SAASI,QAAQ;UAClB8E,QAAQA,OAAO9E;UACfoF,WAAY,YAAWJ,eAAe,MAAM,QAAQjF,OAAOC,QAAQ,IAAI,SAASiF,wBAAwBC,qBAAqB,KAAK;UAClItF,UAAUwE,SAASpE,SAASQ,WAAWR,UAAUU,cAAc,aAAa;UAC5E,GAAIgC,mBAAmB1C,QAAQiD,SAAY;YAAEC,YAAY;UAAd;QAL9B;AAQf,YAAI,CAACS,UAAU3D;AAAO,iBAAOmF;AAE7B,YAAI/B,MAAMpD,QAAQ;AAAG,gBAAM,IAAIqF,MAAO,gBAAe3F,gBAA1B;AAE3B,cAAMgC,OAAOe,MAAMzC,MAAMoD,MAAMpD;AAE/B,YAAI,CAAC0B;AAAM,gBAAM,IAAI2D,MAAO,+BAA8B3F,IAAzC;AAEjB,cAAM8B,UAAUH,iBAAiBrB,MAAMH,IAAIH,EAA3B;AAChB,YAAI8B,SAAS;AACXE,eAAKF,QAAQ5B,aAAa4B,QAAQ1B;QACnC;AAED,eAAO;UACL,GAAGqF;UACHG,QAAQN,eAAgB,eAActD,KAAKrC,WAAWqC,KAAKlC,cAAc0E,YAAYlE,QAAS,GAAEkE,YAAYlE,YAAYiD;UACxH3D,MAAM2F,uBAAuBhC,SAAa,GAAEvB,KAAKpC;UACjDC,OAAO0F,uBAAwB,GAAEvD,KAAKnC,YAAY0D;UAClD5D,KAAKO,SAASI,UAAU,WAAY,GAAE0B,KAAKrC,UAAU4D;UACrDzD,QAAQI,SAASI,UAAU,QAAS,GAAE0B,KAAKlC,aAAayD;UACxDsC,OAAO,CAACP,eAAgB,eAActD,KAAKpC,YAAYoC,KAAKnC,aAAa2E,YAAYlE,QAAS,GAAEkE,YAAYlE,YAAYiD;QAPnH;MASR,CAnCgC;AAqCjC,YAAMuC,wBAAwB/E,SAAwB,OAAO;QAC3DqE,QAAQA,OAAO9E,QAAQ;MADoC,EAAvB;AAItC,aAAO;QAAE+E;QAAkBS;QAAuBV;MAA3C;IACR;IACDW,YAAa/F,QAAe;AAC1BqB,iBAAW2E,OAAOhG,EAAlB;AACAT,gBAAUyG,OAAOhG,EAAjB;AACAR,kBAAYwG,OAAOhG,EAAnB;AACAP,kBAAYuG,OAAOhG,EAAnB;AACAsB,0BAAoB0E,OAAOhG,EAA3B;AACAiB,iBAAWX,QAAQW,WAAWX,MAAMyB,OAAOkE,OAAKA,MAAMjG,EAAnC;IACpB;IACDoD;IACAS;IACAd;IACAtB;IACAX;EApFwB,CAAnB;AAuFP,QAAMoF,gBAAgBnF,SAAS,MAAM,CACnC,YACA;IAAE,yBAAyBL,MAAMyF;EAAjC,CAFmC,CAAP;AAK9B,QAAMC,eAAerF,SAAS,OAAO;IACnCqE,QAAQtE,WAAWR;IACnBJ,UAAUS,eAAe,aAAsB4C;IAC/C8C,UAAU1F,eAAe,WAAW4C;EAHD,EAAR;AAM7B,SAAO;IACL2C;IACAE;IACAvC;IACAd;IACAtB;IACA6E,WAAW/E;EANN;AAQR;",
  "names": ["VuetifyLayoutKey", "Symbol", "for", "VuetifyLayoutItemKey", "ROOT_ZINDEX", "makeLayoutProps", "propsFactory", "overlaps", "type", "Array", "default", "fullHeight", "Boolean", "makeLayoutItemProps", "name", "String", "order", "Number", "absolute", "useLayout", "layout", "inject", "Error", "generateLayers", "layout", "positions", "layoutSizes", "activeItems", "previousLayer", "top", "left", "right", "bottom", "layers", "id", "layer", "position", "get", "amount", "active", "value", "parseInt", "push", "createLayout", "props", "parentLayout", "inject", "VuetifyLayoutKey", "rootZIndex", "computed", "ROOT_ZINDEX", "registered", "ref", "reactive", "Map", "priorities", "disabledTransitions", "resizeRef", "contentRect", "layoutRect", "useResizeObserver", "computedOverlaps", "map", "overlaps", "overlap", "filter", "item", "includes", "split", "topPosition", "bottomPosition", "topAmount", "bottomAmount", "set", "uniquePriorities", "Set", "values", "p", "sort", "a", "b", "items", "transitionsEnabled", "Array", "from", "some", "mainStyles", "length", "convertToUnit", "undefined", "transition", "slice", "index", "size", "Number", "getLayoutItem", "find", "rootVm", "getCurrentInstance", "isMounted", "onMounted", "provide", "register", "vm", "order", "layoutSize", "elementSize", "disableTransitions", "absolute", "instances", "findChildrenWithProvide", "VuetifyLayoutItemKey", "vnode", "instanceIndex", "indexOf", "splice", "findIndex", "i", "zIndex", "layoutItemStyles", "isHorizontal", "isOppositeHorizontal", "isOppositeVertical", "styles", "transform", "Error", "height", "width", "layoutItemScrimStyles", "unregister", "delete", "v", "layoutClasses", "fullHeight", "layoutStyles", "overflow", "layoutRef"]
}
